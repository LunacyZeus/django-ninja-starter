[program:ec_beat]
; program: 名称
; 启动命令，当然你可以直接 python run.py
command = /usr/local/src/demo/.venv/bin/celery -A application beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler

; 工作目录（脚本启动目录的全路径）
directory = /usr/local/src/demo

; 启动等待时间（秒）
startsecs = 0

; 停止等待时间（秒）
stopwaitsecs = 0

; supervisord 守护程序启动时自动启动 wsgi
autostart = true

; supervisord 守护程序重启时自动重启 wsgi
autorestart = true

; 将 stderr 重定向到 stdout
redirect_stderr = true

; 日志标准输出路径，同时脚本 print 打印信息也会在该文件显示
stdout_logfile = /opt/log/ec-beat-stdout.log

; 日志错误输出路径
stderr_logfile = /opt/log/ec-beat-error.log

; 设置环境变量
environment = DJANGO_SETTINGS_MODULE=application.settings,DJANGO_ENV=production


[program:ec_worker]
; program: 名称
; 启动命令，当然你可以直接 python run.py
command = /usr/local/src/demo/.venv/bin/celery -A application worker --loglevel=INFO -E --concurrency=2 --max-tasks-per-child=100 --prefetch-multiplier=1

; 工作目录（脚本启动目录的全路径）
directory = /usr/local/src/demo

; 启动等待时间（秒）
startsecs = 0

; 停止等待时间（秒）
stopwaitsecs = 0

; supervisord 守护程序启动时自动启动 wsgi
autostart = true

; supervisord 守护程序重启时自动重启 wsgi
autorestart = true

; 将 stderr 重定向到 stdout
redirect_stderr = true

; 日志标准输出路径，同时脚本 print 打印信息也会在该文件显示
stdout_logfile = /opt/log/demo-worker-stdout.log

; 日志错误输出路径
stderr_logfile = /opt/log/demo-worker-error.log

; 设置环境变量
environment = DJANGO_SETTINGS_MODULE=application.settings,DJANGO_ENV=production